/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyectprogra2;

import java.awt.Color;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import clases.pacientes;
import clases.pacientes2;
import clases.postgreeconexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anaca
 */
public class Reporte extends javax.swing.JFrame {

    /**
     * Creates new form Reporte
     */
      List<pacientes> listapacientes;
    pacientes paciente = new pacientes();
    List<pacientes2> listapacientes1;
    pacientes2 paciente1 = new pacientes2();
    public Reporte() {
        initComponents();
        
        SetDate();
        color();
        listapacientes = new ArrayList<>();
        
        listapacientes1 = new ArrayList<>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fondo = new javax.swing.JPanel();
        menus = new javax.swing.JPanel();
        mensaje2 = new javax.swing.JLabel();
        barra = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        newreporte = new javax.swing.JButton();
        modreporte = new javax.swing.JButton();
        cabeza = new javax.swing.JPanel();
        mensaje1 = new javax.swing.JLabel();
        hora = new javax.swing.JLabel();
        mensaje = new javax.swing.JLabel();
        fondo2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportes1 = new javax.swing.JTable();
        buscar2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        fondo.setBackground(new java.awt.Color(127, 181, 181));
        fondo.setForeground(new java.awt.Color(255, 255, 255));
        fondo.setPreferredSize(new java.awt.Dimension(1168, 640));

        menus.setBackground(new java.awt.Color(127, 181, 181));
        menus.setForeground(new java.awt.Color(51, 51, 255));
        menus.setPreferredSize(new java.awt.Dimension(270, 640));

        mensaje2.setFont(new java.awt.Font("NSimSun", 1, 24)); // NOI18N
        mensaje2.setText("HOSPITAL DE DIOS");

        barra.setBackground(new java.awt.Color(255, 255, 255));
        barra.setPreferredSize(new java.awt.Dimension(160, 22));

        javax.swing.GroupLayout barraLayout = new javax.swing.GroupLayout(barra);
        barra.setLayout(barraLayout);
        barraLayout.setHorizontalGroup(
            barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );
        barraLayout.setVerticalGroup(
            barraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        jButton1.setBackground(new java.awt.Color(127, 181, 181));
        jButton1.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("INICIO");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.setIconTextGap(10);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        newreporte.setBackground(new java.awt.Color(127, 181, 181));
        newreporte.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        newreporte.setForeground(new java.awt.Color(255, 255, 255));
        newreporte.setText("VER REPORTE");
        newreporte.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newreporte.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newreporte.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        newreporte.setMaximumSize(new java.awt.Dimension(42, 20));
        newreporte.setMinimumSize(new java.awt.Dimension(42, 20));
        newreporte.setPreferredSize(new java.awt.Dimension(42, 20));
        newreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newreporteActionPerformed(evt);
            }
        });

        modreporte.setBackground(new java.awt.Color(127, 181, 181));
        modreporte.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        modreporte.setForeground(new java.awt.Color(255, 255, 255));
        modreporte.setText("MODIFICAR REPORTE");
        modreporte.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modreporte.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        modreporte.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        modreporte.setMaximumSize(new java.awt.Dimension(42, 20));
        modreporte.setMinimumSize(new java.awt.Dimension(42, 20));
        modreporte.setPreferredSize(new java.awt.Dimension(42, 20));
        modreporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modreporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menusLayout = new javax.swing.GroupLayout(menus);
        menus.setLayout(menusLayout);
        menusLayout.setHorizontalGroup(
            menusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menusLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(mensaje2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(menusLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(modreporte, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(newreporte, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        menusLayout.setVerticalGroup(
            menusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menusLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(mensaje2)
                .addGap(6, 6, 6)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(128, 128, 128)
                .addGroup(menusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menusLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(modreporte, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(menusLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(newreporte, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
        );

        cabeza.setBackground(new java.awt.Color(127, 181, 181));
        cabeza.setPreferredSize(new java.awt.Dimension(750, 150));

        mensaje1.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        mensaje1.setText("REPORTE / NUEVO REPORTE / MODIFICAR / ELIMINAR / BUSCAR");

        hora.setFont(new java.awt.Font("NSimSun", 1, 36)); // NOI18N
        hora.setText("FECHA:  {dayname}  {day} de {month} de {year}");

        javax.swing.GroupLayout cabezaLayout = new javax.swing.GroupLayout(cabeza);
        cabeza.setLayout(cabezaLayout);
        cabezaLayout.setHorizontalGroup(
            cabezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabezaLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(cabezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mensaje1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cabezaLayout.setVerticalGroup(
            cabezaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cabezaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(mensaje1)
                .addGap(18, 18, 18)
                .addComponent(hora, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        mensaje.setBackground(new java.awt.Color(127, 181, 181));
        mensaje.setFont(new java.awt.Font("NSimSun", 1, 24)); // NOI18N
        mensaje.setText("REPORTE CLINICO");

        fondo2.setBackground(new java.awt.Color(127, 181, 181));

        reportes1.setFont(new java.awt.Font("NSimSun", 1, 12)); // NOI18N
        reportes1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No de paciente", "Nombre", "Apellido", "Observación", "Diagnostico", "Fecha de ingreso", "Fecha de salida"
            }
        ));
        jScrollPane1.setViewportView(reportes1);

        buscar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscar2KeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("NSimSun", 1, 18)); // NOI18N
        jLabel1.setText("Buscar paciente por correlativo del Afiliado");

        javax.swing.GroupLayout fondo2Layout = new javax.swing.GroupLayout(fondo2);
        fondo2.setLayout(fondo2Layout);
        fondo2Layout.setHorizontalGroup(
            fondo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
            .addGroup(fondo2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buscar2)
                .addContainerGap())
        );
        fondo2Layout.setVerticalGroup(
            fondo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondo2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(fondo2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(buscar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addComponent(menus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fondo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(cabeza, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menus, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(cabeza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fondo2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 1029, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void newreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newreporteActionPerformed
        verpacientes2();
       
    }//GEN-LAST:event_newreporteActionPerformed

    private void modreporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modreporteActionPerformed
        // TODO add your handling code here:
        mostrarreporte(buscar2.getText());
        ModifcarReporte modif = new ModifcarReporte();
        modif.setVisible(true);
         this.dispose();
        
        
    }//GEN-LAST:event_modreporteActionPerformed

    private void buscar2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscar2KeyReleased
        // TODO add your handling code here:
       
        buscarreporte(buscar2.getText());
    }//GEN-LAST:event_buscar2KeyReleased

    private void color(){
        mensaje.putClientProperty( "FlatLaf.style", "font: 200% $light.font" );
        mensaje.setForeground(Color.black);
        mensaje1.putClientProperty( "FlatLaf.style", "font: 15 $light.font" );
        mensaje1.setForeground(Color.black);
        mensaje2.putClientProperty( "FlatLaf.style", "font: 20 $light.font" );
        mensaje2.setForeground(Color.white);
        hora.putClientProperty( "FlatLaf.style", "font: 200% $light.font" );
        hora.setForeground(Color.black);
    }
    
     private void SetDate(){
        
        LocalDate now = LocalDate.now();
        Locale spanishLocale = new Locale("es", "ES");
        hora.setText(now.format(DateTimeFormatter.ofPattern("'Hoy es' EEEE dd 'De' MMMM 'De' yyyy", spanishLocale)));
        
    }
     
     private void verpacientes2(){
         
          listapacientes.clear();
          postgreeconexion conexion = new postgreeconexion();
            Connection CONEXION = conexion.connectarPostgree();
            
            try {
                
                String SQL = "SELECT no_paciente, dpi, nombres, primer_apellido, observacion, alergias, hora_ingreso, hora_egreso\n" +
                        "FROM public.registro";
                
                Statement statement;

            statement = CONEXION.createStatement(); // creamos sentencia
            ResultSet rs = statement.executeQuery(SQL); // ejecuta consulta
            
            while(rs.next()){
                pacientes datos = new pacientes();
                datos.setNopaciente(rs.getString("no_paciente"));
                datos.setDPI(rs.getString("dpi"));
                datos.setNombres(rs.getString("nombres"));
                datos.setPrimerapellido(rs.getString("primer_apellido"));
                datos.setObservacion(rs.getString("observacion"));
                datos.setAlergias(rs.getString("alergias"));
                datos.setHoraingreso(rs.getString("hora_ingreso"));
                datos.setHoraegreso(rs.getString("hora_egreso"));
                listapacientes.add(datos);
            }
            
            CONEXION.close();//SIEMPRE SE CIERRA LA CONEXION
            CONEXION = null; // SE COLOCA A NULL LA CONEXION PARA QUE EL GC TOME ESTE OBJETO Y LO ELIMINE DE MEMORIA
            conexion = null;
           
        } catch (SQLException ex) {
              Logger.getLogger(paciente.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            int numeroFila = 10;
            if(listapacientes.size() > 10){
                numeroFila = listapacientes.size();
            }
            String[][] matriz = new String[numeroFila][10];
            
            for (int i = 0; i < listapacientes.size(); i++ ){
                matriz[i][0] = listapacientes.get(i).getNopaciente();
                matriz[i][1] = listapacientes.get(i).getDPI();
                matriz[i][2] = listapacientes.get(i).getNombres();
                matriz[i][3] = listapacientes.get(i).getPrimerapellido();
                matriz[i][4] = listapacientes.get(i).getObservacion();
                matriz[i][5] = listapacientes.get(i).getAlergias();
                matriz[i][6] = listapacientes.get(i).getHoraingreso();
                matriz[i][7] = listapacientes.get(i).getHoraegreso();
            }
              reportes1.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "No. paciente", "DPI", "Nombres", "Apellido", "Observacion", "Diagnostico", "Hora_ingreso", "Hora_egreso"
                }
        ));
              
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int x = 0; x < 6; x++) {
            reportes1.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
        }
     }
     
     private void buscarreporte(String Buscar){
         
          listapacientes.clear();
           postgreeconexion conexion = new postgreeconexion();
            Connection CONEXION = conexion.connectarPostgree();
            
            try {
                
                String SQL = "SELECT no_paciente, dpi, nombres, primer_apellido, observacion, alergias, hora_ingreso, hora_egreso\n" +
                        "FROM public.registro WHERE no_paciente LIKE '%"+Buscar+"%' OR nombres ILIKE '%"+Buscar+"%' OR dpi ILIKE '%"+Buscar+"%'";
                
                Statement statement;

            statement = CONEXION.createStatement(); // creamos sentencia
            ResultSet rs = statement.executeQuery(SQL); // ejecuta consulta
            
            while(rs.next()){
                pacientes datos = new pacientes();
                datos.setNopaciente(rs.getString("no_paciente"));
                datos.setNombres(rs.getString("nombres"));
                datos.setObservacion(rs.getString("observacion"));
                datos.setHoraingreso(rs.getString("hora_ingreso"));
                datos.setHoraegreso(rs.getString("hora_egreso"));
                listapacientes.add(datos);
            }
            
            CONEXION.close();//SIEMPRE SE CIERRA LA CONEXION
            CONEXION = null; // SE COLOCA A NULL LA CONEXION PARA QUE EL GC TOME ESTE OBJETO Y LO ELIMINE DE MEMORIA
            conexion = null;
           
        } catch (SQLException ex) {
              Logger.getLogger(paciente.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            int numeroFila = 4;
            if(listapacientes.size() > 5){
                numeroFila = listapacientes.size();
            }
            String[][] matriz = new String[numeroFila][5];
            
            for (int i = 0; i < listapacientes.size(); i++ ){
                matriz[i][0] = listapacientes.get(i).getNopaciente();
                matriz[i][1] = listapacientes.get(i).getNombres();
                matriz[i][2] = listapacientes.get(i).getObservacion();
                matriz[i][3] = listapacientes.get(i).getHoraingreso();
                 matriz[i][4] = listapacientes.get(i).getHoraegreso();
            }
              reportes1.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "No. paciente", "Nombres", "Observacion", "Hora_ingreso", "Hora_egreso"
                }
        ));
              
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int x = 0; x < 6; x++) {
            reportes1.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
        }
         
     }
     
     private void mostrarreporte(String Buscar2){
           try {
             paciente1 = new pacientes2();
            postgreeconexion conexion = new postgreeconexion();
            Connection CONEXION = conexion.connectarPostgree();
                
              Statement statement;

            statement = CONEXION.createStatement(); 
            
            String SQL = "SELECT * FROM public.registro WHERE no_paciente LIKE '%"+Buscar2+"%' OR nombres ILIKE '%"+Buscar2+"%' OR dpi ILIKE '%"+Buscar2+"%'; ";
            
           ResultSet rs = statement.executeQuery(SQL);
           
           if(rs.next()){
               paciente1.setNopaciente1(rs.getString("no_paciente"));
              paciente1.setPrimerapellido1(rs.getString("primer_apellido"));
              paciente1.setNombres1(rs.getString("nombres"));
              paciente1.setDpi1(rs.getString("dpi"));
              paciente1.setObservacion1(rs.getString("observacion"));
              paciente1.setHoraingreso1(rs.getString("hora_ingreso")); 
              paciente1.setAlergias1(rs.getString("alergias"));
              paciente1.setHoraegreso1(rs.getString("hora_egreso"));
           }else{
              paciente1.setNopaciente1(rs.getString(" "));
              paciente1.setPrimerapellido1(rs.getString(" "));
              paciente1.setNombres1(rs.getString(" "));
              paciente1.setDpi1(rs.getString(" "));
              paciente1.setObservacion1(rs.getString(" "));
              paciente1.setHoraingreso1(rs.getString(" "));
              paciente1.setAlergias1(rs.getString(" "));
              paciente1.setHoraegreso1(rs.getString(" "));
               JOptionPane.showMessageDialog(null,"no se encontro registro", "Sin registro", JOptionPane.INFORMATION_MESSAGE);
           }     
                CONEXION.close();//SIEMPRE SE CIERRA LA CONEXION
            CONEXION = null; // SE COLOCA A NULL LA CONEXION PARA QUE EL GC TOME ESTE OBJETO Y LO ELIMINE DE MEMORIA
            conexion = null;
            
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null,"error al buscar el paciente", "Sin Busqueda", JOptionPane.ERROR_MESSAGE);
         }
     }
     
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reporte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reporte().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel barra;
    private javax.swing.JTextField buscar2;
    private javax.swing.JPanel cabeza;
    private javax.swing.JPanel fondo;
    private javax.swing.JPanel fondo2;
    private javax.swing.JLabel hora;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mensaje;
    private javax.swing.JLabel mensaje1;
    private javax.swing.JLabel mensaje2;
    private javax.swing.JPanel menus;
    private javax.swing.JButton modreporte;
    private javax.swing.JButton newreporte;
    private javax.swing.JTable reportes1;
    // End of variables declaration//GEN-END:variables
}
